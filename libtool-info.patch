--- libtool-2.4.3/doc/libtool.texi.orig	2014-10-27 18:20:51.000000000 +0100
+++ libtool-2.4.3/doc/libtool.texi	2014-10-29 16:14:31.197974801 +0100
@@ -30,15 +30,11 @@
 the section entitled ``GNU Free Documentation License''.
 @end copying
 
-@dircategory Software development
+@dircategory Programming tools:
 @direntry
-* Libtool: (libtool).           Generic shared library support script.
-@end direntry
-
-@dircategory Individual utilities
-@direntry
-* libtool-invocation: (libtool)Invoking libtool. Running the @code{libtool} script.
-* libtoolize: (libtool)Invoking libtoolize.      Adding libtool support.
+* Libtool: (libtool).			Generic shared library support script
+* libtool-invocation: (libtool)libtool.	Running the @code{libtool} script
+* libtoolize: (libtool)libtoolize.	Adding libtool support
 @end direntry
 
 @titlepage
@@ -72,7 +68,7 @@
 * Introduction::                What the heck is libtool?
 * Libtool paradigm::            How libtool's view of libraries is different.
 * Using libtool::               Example of using libtool to build libraries.
-* Invoking libtool::            Running the @code{libtool} script.
+* libtool::                     Running the @code{libtool} script.
 * Integrating libtool::         Using libtool in your own packages.
 * Other languages::             Using libtool without a C compiler.
 * Versioning::                  Using library interface versions.
@@ -137,7 +133,7 @@
 
 Including libtool in your package
 
-* Invoking libtoolize::         @code{libtoolize} command line options.
+* libtoolize::                  @code{libtoolize} command line options.
 * Autoconf and LTLIBOBJS::      Autoconf automates LTLIBOBJS generation.
 
 Using libtool with other languages
@@ -1171,7 +1167,7 @@
 creating a standalone binary.  Use libtool to do the linking and add the
 @option{-all-static} flag.
 
-@node Invoking libtool
+@node libtool
 @chapter Invoking @command{libtool}
 @pindex libtool
 @cindex libtool command options
@@ -2429,8 +2425,8 @@
 @end defmac
 
 @pindex aclocal
-When you invoke the @command{libtoolize} program (@pxref{Invoking
-libtoolize}), it will tell you where to find a definition of
+When you invoke the @command{libtoolize} program (@pxref{libtoolize}),
+it will tell you where to find a definition of
 @code{LT_INIT}.  If you use Automake, the @command{aclocal} program
 will automatically add @code{LT_INIT} support to your
 @file{configure} script when it sees the invocation of @code{LT_INIT}
@@ -2487,11 +2483,11 @@
 copying these files into your package.
 
 @menu
-* Invoking libtoolize::         @code{libtoolize} command line options.
+* libtoolize::                  @code{libtoolize} command line options.
 * Autoconf and LTLIBOBJS::      Autoconf automates LTLIBOBJS generation.
 @end menu
 
-@node Invoking libtoolize
+@node libtoolize
 @subsection Invoking @command{libtoolize}
 @pindex libtoolize
 @cindex libtoolize command options
@@ -2842,7 +2838,7 @@
 a tag, then it defaults to the configuration for the @code{C} language.
 
 The tag can also be specified using @command{libtool}'s
-@option{--tag=@var{tag}} option (@pxref{Invoking libtool}).  It is a good
+@option{--tag=@var{tag}} option (@pxref{libtool}).  It is a good
 idea to do so in @file{Makefile} rules, because that will allow users to
 substitute the compiler without relying on @command{libtool} inference
 heuristics.  When no tag is specified, @command{libtool} will default
@@ -4692,7 +4688,7 @@
 @defmac LT_CONFIG_LTDL_DIR (@var{directory})
 Declare @var{directory} to be the location of the @code{libltdl}
 source files, for @command{libtoolize --ltdl} to place
-them. @xref{Invoking libtoolize}, for more details.  Provided that you
+them. @xref{libtoolize}, for more details.  Provided that you
 add an appropriate @code{LT_CONFIG_LTDL_DIR} call in your
 @file{configure.ac} before calling @command{libtoolize}, the
 appropriate @code{libltdl} files will be installed automatically.
